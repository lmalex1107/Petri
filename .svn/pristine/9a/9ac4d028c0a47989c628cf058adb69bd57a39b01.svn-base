package model;

import java.util.ArrayList;
import java.util.Comparator;

public class Knot implements Comparable<Knot>{
	private String id;
	private String name;
	private int x;
	private int y;
	private ArrayList<Knot> predecessor = null;
	private ArrayList<Knot> successor = null;
	
	public Knot (String id) {
		this.id = id;
		predecessor = new ArrayList<Knot>();
		successor = new ArrayList<Knot>();
	}
	
	public String getId() {
		return this.id;
	}
	
	public String getName() {
		return this.name;
	}
	
	public int getX() {
		return this.x;
	}
	
	public int getY() {
		return this.y;
	}
	
	public void setId(String id) {
		this.id = id;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public void setX(int x) {
		this.x = x;
	}
	
	public void setY(int y) {
		this.y = y;
	}
	
	public void setPredecessor (Knot knot) {
		this.predecessor.add(knot);	
	}
	
	public ArrayList<Knot> getPredecessorList(){
		return this.predecessor;
	}
	
	public void setSuccessor (Knot knot) {
		this.successor.add(knot);
	}
	
	public ArrayList<Knot> getSuccessorList(){
		return this.successor;
	}
	
	public int getToken() {				//Methode eingefügt, um Schema Knot: Place und Transition nicht ändern zu müssen.???
		return -1;
	}
		
	public void plusToken(int token) {
		
	}
	public static void main (String args[]) {
		Place place = new Place("");
		System.out.println(place.getClass().toString());
	}

	@Override
	public int compareTo(Knot knot) {
		return this.getId().compareTo(knot.getId());
	}
}
